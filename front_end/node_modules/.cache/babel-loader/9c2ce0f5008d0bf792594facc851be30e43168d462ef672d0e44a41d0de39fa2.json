{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport const useApi = (task, deps) => {\n  _s();\n  const [data, setData] = useState(task.initialValue);\n  const [inProgress, setInProgress] = useState(task.defer === false || task.currentUser === true);\n  const [isError, setIsError] = useState(false);\n  const execute = async function () {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    try {\n      setInProgress(true);\n      setIsError(false);\n      setData(task.initialValue);\n      const result = await task.action(params);\n      setData(result);\n      setInProgress(false);\n      task.onSuccess && task.onSuccess(result);\n    } catch (e) {\n      setIsError(true);\n      setInProgress(false);\n      task.onError && task.onError(e);\n    }\n  };\n  useEffect(() => {\n    if (task.defer || task.condition === false) return;\n    execute();\n  }, deps);\n  return {\n    data,\n    inProgress,\n    isError,\n    setData,\n    execute\n  };\n};\n_s(useApi, \"C+ME3I8ZGAsaPDxbMhvzY0ShIuM=\");\nexport default useApi;","map":{"version":3,"names":["useState","useEffect","useApi","task","deps","_s","data","setData","initialValue","inProgress","setInProgress","defer","currentUser","isError","setIsError","execute","params","arguments","length","undefined","result","action","onSuccess","e","onError","condition"],"sources":["/Volumes/SSD/VS code/beta/App /src/Shared/useapi.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const useApi = (task: any, deps: any) => {\n    const [data, setData] = useState(task.initialValue);\n    const [inProgress, setInProgress] = useState(task.defer === false || task.currentUser === true);\n    const [isError, setIsError] = useState(false);\n\n    const execute = async (params = null) => {\n        try {\n            setInProgress(true);\n            setIsError(false);\n            setData(task.initialValue);\n\n            const result = await task.action(params);\n\n            setData(result);\n            setInProgress(false);\n\n            task.onSuccess && task.onSuccess(result);\n        } catch (e) {\n            setIsError(true);\n            setInProgress(false);\n\n            task.onError && task.onError(e);\n        }\n    };\n\n    useEffect(() => {\n        if (task.defer || task.condition === false) return;\n\n        execute();\n    }, deps);\n\n    return {\n        data,\n        inProgress,\n        isError,\n        setData,\n        execute\n    };\n};\n\nexport default useApi;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,MAAMC,MAAM,GAAGA,CAACC,IAAS,EAAEC,IAAS,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAACG,IAAI,CAACK,YAAY,CAAC;EACnD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAACG,IAAI,CAACQ,KAAK,KAAK,KAAK,IAAIR,IAAI,CAACS,WAAW,KAAK,IAAI,CAAC;EAC/F,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMe,OAAO,GAAG,eAAAA,CAAA,EAAyB;IAAA,IAAlBC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;IAChC,IAAI;MACAP,aAAa,CAAC,IAAI,CAAC;MACnBI,UAAU,CAAC,KAAK,CAAC;MACjBP,OAAO,CAACJ,IAAI,CAACK,YAAY,CAAC;MAE1B,MAAMY,MAAM,GAAG,MAAMjB,IAAI,CAACkB,MAAM,CAACL,MAAM,CAAC;MAExCT,OAAO,CAACa,MAAM,CAAC;MACfV,aAAa,CAAC,KAAK,CAAC;MAEpBP,IAAI,CAACmB,SAAS,IAAInB,IAAI,CAACmB,SAAS,CAACF,MAAM,CAAC;IAC5C,CAAC,CAAC,OAAOG,CAAC,EAAE;MACRT,UAAU,CAAC,IAAI,CAAC;MAChBJ,aAAa,CAAC,KAAK,CAAC;MAEpBP,IAAI,CAACqB,OAAO,IAAIrB,IAAI,CAACqB,OAAO,CAACD,CAAC,CAAC;IACnC;EACJ,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACZ,IAAIE,IAAI,CAACQ,KAAK,IAAIR,IAAI,CAACsB,SAAS,KAAK,KAAK,EAAE;IAE5CV,OAAO,CAAC,CAAC;EACb,CAAC,EAAEX,IAAI,CAAC;EAER,OAAO;IACHE,IAAI;IACJG,UAAU;IACVI,OAAO;IACPN,OAAO;IACPQ;EACJ,CAAC;AACL,CAAC;AAACV,EAAA,CAtCWH,MAAM;AAwCnB,eAAeA,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}